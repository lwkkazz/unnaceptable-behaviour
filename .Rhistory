cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\Data\\"
library (neuralnet)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\Data\\"
data <- fread(paste0(cdd, "flying-etiquette.csv"), stringsAsFactors = T, na.strings="NA")
data[data == ''] <- NA
missmap(train)
colnames(data)
#13
train <- subset(data, select = c(2, 5, 13,
24, 25, 26, 27))
colnames(train) <- c("often_travel", "height",  "recline",  "gender", "age", "income", "education")
train <- train[complete.cases(train), ]
train <- as.data.frame(lapply(train, unclass))
train <- as.data.frame(lapply(train, normalize))
test  <- tail(train, nrow(train) * 0.25)
train <- head(train, nrow(train) * 0.75)
start_time <- Sys.time()
nn <- neuralnet(recline~.,
data=train, hidden=c(3, 3, 3))
end_time <- Sys.time()
time <- end_time - start_time
temp_test <- test
nn.results <- compute(nn, temp_test)
results <- data.frame(actual = test$recline, prediction = nn.results$net.result)
roundedresults<-sapply(results,round,digits=0)
roundedresultsdf=data.frame(roundedresults)
attach(roundedresultsdf)
table(actual,prediction)
pred <- predict(nn, test, type="response")
ROCRpred <- prediction(pred, test$recline)
ROCRperf <- performance(ROCRpred, 'tpr', 'fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2, 1.2))
test$predicted <- pred
test$hitmiss <- ifelse(((test$recline == 1 & test$predicted >= 0.5) | (test$recline == 0 & test$predicted < 0.5)),1,0)
mean(test$hitmiss)
plot(nn)
auc_ROCR <- performance(ROCRpred, measure = "auc")
auc_ROCR <- auc_ROCR@y.values[[1]]
message(paste0("Neural network train time: ", time))
library (neuralnet)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\Data\\"
data <- fread(paste0(cdd, "flying-etiquette.csv"), stringsAsFactors = T, na.strings="NA")
data[data == ''] <- NA
missmap(train)
colnames(data)
#13
train <- subset(data, select = c(2, 5, 13,
24, 25, 26, 27))
colnames(train) <- c("often_travel", "height",  "recline",  "gender", "age", "income", "education")
library(data.table)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T)
View(data)
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T)
View(data)
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T)
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
data[data == 'Prefiro não responder'] <- NA
missmap(data)
# missmap(data)
data_comp <- data[complete.cases(data), ]
View(data_comp)
rm(data_comp)
data <- as.data.frame(lapply(data, unclass))
data <- as.data.frame(lapply(data, normalize))
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T)
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
data[data == 'Prefiro não responder'] <- NA
data <- as.data.frame(lapply(data, unclass))
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
data[data == 'Prefiro não responder'] <- NA
# missmap(data)
data <- as.data.frame(lapply(data, unclass))
data <- as.data.frame(lapply(data, normalize))
View(data)
train <- as.data.frame(lapply(train, normalize))
data <- as.data.frame(lapply(data, normalize))
max(data$CR)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
data[data == 'Prefiro não responder'] <- NA
summary(data)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
summary(data)
data$`Qual é a sua idade-` <- mean(data$`Qual é a sua idade-`, na.rm = T)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
data[is.na(data$`Qual é a sua idade-`),] <- mean(data$`Qual é a sua idade-`, na.rm = T)
data[is.na(data$`Qual é a sua idade-`)] <- mean(data$`Qual é a sua idade-`, na.rm = T)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
data <- as.data.frame(lapply(data, unclass))
View(data)
data <- as.data.frame(lapply(data, normalize))
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
# data[is.na(data$`Qual é a sua idade-`)] <- mean(data$`Qual é a sua idade-`, na.rm = T)
summary(data)
# missmap(data)
data <- as.data.frame(lapply(data, unclass))
missmap(data)
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
missmap(data)
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
missmap(data)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
# data[is.na(data$`Qual é a sua idade-`)] <- mean(data$`Qual é a sua idade-`, na.rm = T)
summary(data)
missmap(data)
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
data <- as.data.frame(lapply(data, unclass))
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
missmap(data)
summary(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..)
data[is.na(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..),] <- 0
missmap(data)
data <- as.data.frame(lapply(data, normalize))
missmap(data)
max(data)
summary(data)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
# data[is.na(data$`Qual é a sua idade-`)] <- mean(data$`Qual é a sua idade-`, na.rm = T)
summary(data)
missmap(data)
data <- as.data.frame(lapply(data, unclass))
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
data[is.na(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..),] <- 0
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
summary(data)
missmap(data)
data <- as.data.frame(lapply(data, unclass))
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
data[is.na(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..),] <- 0
data$Qual.é.a.sua.idade. <- na.mean(data$Qual.é.a.sua.idade., option = "mean")
install.packages(‘na.tools’)
install.packages("na.tools")
library (na.tools)
data$Qual.é.a.sua.idade. <- na.mean(data$Qual.é.a.sua.idade., option = "mean")
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
library (na.tools)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
summary(data)
data <- as.data.frame(lapply(data, unclass))
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
data[is.na(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..),] <- 0
data$Qual.é.a.sua.idade. <- na.mean(data$Qual.é.a.sua.idade., option = "mean")
missmap(data)
data <- as.data.frame(lapply(data, normalize))
missmap(data)
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
library (na.tools)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
summary(data)
data <- as.data.frame(lapply(data, unclass))
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
data[is.na(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..),] <- 0
data[is.na(data$Você.pretende.solicitar.transferência.para.outro.Bacharelado.Interdisciplinar.da.UFABC.no..próximo.ano.acadêmico..),] <- 0
data$Qual.é.a.sua.idade. <- na.mean(data$Qual.é.a.sua.idade., option = "mean")
missmap(data)
data <- as.data.frame(lapply(data, normalize))
missmap(data)
data_train <- head(data, nrow(data)*0.7)
data_test  <- tail(data, nrow(data)*0.3)
model <- glm(Trancamento ~., family=binomial(link='logit'), data=data_train)
missmap(data)
model <- glm(Trancamento~., family=binomial(link='logit'), data=data_train)
View(model)
?glm
model <- glm(Trancamento~., family=binomial(link='logit'), data=data_train)
summary(data)
data$Você.pretende.solicitar.transferência.para.outro.Bacharelado.Interdisciplinar.da.UFABC.no..próximo.ano.acadêmico.. <- NULL
library (data.table)
library (ROCR)
library (bit64)
library (Amelia)
library (na.tools)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
cdd <- "C:\\Users\\lucas\\Desktop\\Machine Learning\\ProjetoML\\data\\"
data <- fread(paste0(cdd, "base_perfil.csv"), stringsAsFactors = T, dec = ",")
data[data == ''] <- NA
data[data == 'NA'] <- NA
data[data == 'N/A'] <- NA
# data[data == 'Prefiro não responder'] <- NA
summary(data)
data <- as.data.frame(lapply(data, unclass))
data$Qual.é.o.nível.de.escolaridade.de.seu.pai. <- NULL
data$Qual.é.o.nível.de.escolaridade.de.sua.mãe. <- NULL
data[is.na(data$Qual.é.o.tipo.de.vínculo.da.sua.atividade.remunerada..não.acadêmica..),] <- 0
data$Você.pretende.solicitar.transferência.para.outro.Bacharelado.Interdisciplinar.da.UFABC.no..próximo.ano.acadêmico.. <- NULL
data$Qual.é.a.sua.idade. <- na.mean(data$Qual.é.a.sua.idade., option = "mean")
# missmap(data)
data <- as.data.frame(lapply(data, normalize))
data_train <- head(data, nrow(data)*0.7)
data_test  <- tail(data, nrow(data)*0.3)
model <- glm(Trancamento~., family=binomial(link='logit'), data=data_train)
summary(data_train)
